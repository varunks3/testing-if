name: 'Terraform'

on:
  workflow_dispatch:
  repository_dispatch:
permissions:
  contents: read
  

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Creating VM
      env:
        VM_NAME: ${{ github.event.client_payload.vm_name }}
      run: |
        if [[ "VM1" == "VM1" ]]; then
          echo 'inside if'
          echo "${VM_NAME}"
          cd ./VirtualMachine1
          terraform init
          terraform plan -var "vm_name=${VM_NAME}"
          terraform apply -var "vm_name=${VM_NAME}" -auto-approve
        else
          echo "inside else"
          cd ./VirtualMachine3
          terraform init
          terraform plan -var "vm_name=${VM_NAME}"
          terraform apply -var "vm_name"=${VM_NAME}" -auto-approve
        fi

    - name: Creating VM2
      env:
        VM2_NAME: ${{ github.event.client_payload.vm2_name }}
      run: |
        if [ "${{ github.event.client_payload.vm2_name }}" == "sql" ]; then
          cd ./SQLManagedInstance
          terraform init
          terraform plan -var "vm_name=${VM2_NAME}"
          terraform apply -var "vm_name=${VM2_NAME}" -auto-approve
        else
          cd ./VirtualMachine2
          terraform init
          terraform plan -var "vm_name=${VM2_NAME}"
          terraform apply -var "vm_name=${VM2_NAME}" -auto-approve
        fi

    - name: Vnet Peering
      env:
        VM2_NAME: ${{ github.event.client_payload.vm2_name }}
      run: |
        if [ "${{ github.event.client_payload.vm2_name }}" == "sql" ]; then
          cd ./VnetPeering
          terraform init
          terraform plan -var "vnet1_name=vm3_vnet" -var "vnet2_name=sql-vnet"
          terraform apply -var "vnet1_name=vm3_vnet" -var "vnet2_name=sql-vnet" -auto-approve
        else
          cd ./VnetPeering
          terraform init
          terraform plan
          terraform apply -auto-approve
        fi